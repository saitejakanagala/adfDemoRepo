{
	"name": "empdeptdataflow",
	"properties": {
		"folder": {
			"name": "saiteja"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "employee_ds",
						"type": "DatasetReference"
					},
					"name": "employeedata"
				},
				{
					"dataset": {
						"referenceName": "deparment_ds",
						"type": "DatasetReference"
					},
					"name": "departmentdata"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "empdeptoutput_ds",
						"type": "DatasetReference"
					},
					"name": "empdeptdata"
				}
			],
			"transformations": [
				{
					"name": "joinempdeptdata"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as string,",
				"          name as string,",
				"          country as string,",
				"          department as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> employeedata",
				"source(output(",
				"          depid as string,",
				"          depname as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> departmentdata",
				"employeedata, departmentdata join(department == depid,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinempdeptdata",
				"joinempdeptdata sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['empdeptoutput'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          empid,",
				"          name,",
				"          country,",
				"          depname",
				"     ),",
				"     partitionBy('hash', 1)) ~> empdeptdata"
			]
		}
	}
}