{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfsaiteja"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/newbranch_dataflow_58')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "saiteja"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "employee1csv_ds",
								"type": "DatasetReference"
							},
							"name": "employeeagain"
						},
						{
							"dataset": {
								"referenceName": "deparment_ds",
								"type": "DatasetReference"
							},
							"name": "department"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "empdeptoutput_ds",
								"type": "DatasetReference"
							},
							"name": "joindeptandemp"
						},
						{
							"dataset": {
								"referenceName": "empdeptoutput_ds",
								"type": "DatasetReference"
							},
							"name": "totalempbydept"
						}
					],
					"transformations": [
						{
							"name": "aggregateondept"
						},
						{
							"name": "joinempanddept"
						}
					],
					"scriptLines": [
						"source(output(",
						"          empid as string,",
						"          name as string,",
						"          country as string,",
						"          department as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> employeeagain",
						"source(output(",
						"          depid as string,",
						"          depname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> department",
						"employeeagain aggregate(groupBy(department),",
						"     totalemployees = count(empid)) ~> aggregateondept",
						"employeeagain, department join(department == depname,",
						"     joinType:'outer',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinempanddept",
						"joinempanddept sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['joinoutput58.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> joindeptandemp",
						"aggregateondept sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['outputtotalempbydept58.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> totalempbydept"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/parameterized_dataflow_66')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "saiteja"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "EMPNEW",
								"type": "DatasetReference"
							},
							"name": "employee"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "empdeptoutput_ds",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "filter"
						}
					],
					"scriptLines": [
						"parameters{",
						"     depName as string",
						"}",
						"source(output(",
						"          empid as string,",
						"          name as string,",
						"          gender as string,",
						"          country as string,",
						"          salary as string,",
						"          department as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> employee",
						"employee filter(department == $depName) ~> filter",
						"filter sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['output66.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pivot_60')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "saiteja"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "employeenew_ds",
								"type": "DatasetReference"
							},
							"name": "employeenew"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "empdeptoutput_ds",
								"type": "DatasetReference"
							},
							"name": "sink"
						}
					],
					"transformations": [
						{
							"name": "pivot"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id as string,",
						"          name as string,",
						"          gender as string,",
						"          country as string,",
						"          department as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> employeenew",
						"employeenew pivot(groupBy(department),",
						"     pivotBy(gender),",
						"     {count of id } = count(id),",
						"     columnNaming: '$N$V',",
						"     lateral: true) ~> pivot",
						"pivot sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['pivotoutput_60.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/rank_dataflow_81')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "saiteja"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "EMPNEW",
								"type": "DatasetReference"
							},
							"name": "EMPNEW"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "empdeptoutput_ds",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "rank"
						}
					],
					"scriptLines": [
						"source(output(",
						"          empid as string,",
						"          name as string,",
						"          gender as string,",
						"          country as string,",
						"          salary as string,",
						"          department as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> EMPNEW",
						"EMPNEW rank(asc(salary, true),",
						"     output(rank as long),",
						"     dense: true) ~> rank",
						"rank sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['rankoutput_81.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/selecttransformation_59')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "saiteja"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "employee1csv_ds",
								"type": "DatasetReference"
							},
							"name": "employee"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "empdeptoutput_ds",
								"type": "DatasetReference"
							},
							"name": "sink"
						}
					],
					"transformations": [
						{
							"name": "select"
						}
					],
					"scriptLines": [
						"source(output(",
						"          empid as string,",
						"          name as string,",
						"          country as string,",
						"          department as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> employee",
						"employee select(mapColumn(",
						"          emplyee_name = name,",
						"          employee_id = empid,",
						"          emp_country = country,",
						"          emp_department = department",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select",
						"select sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['selecttransformation59.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/soterdataflow_57')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "saiteja"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "employee1csv_ds",
								"type": "DatasetReference"
							},
							"name": "employee"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "empdeptoutput_ds",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "sort1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          empid as string,",
						"          name as string,",
						"          country as string,",
						"          department as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> employee",
						"employee sort(asc(department, true)) ~> sort1",
						"sort1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['sortouput.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/surrogatekey_62')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "saiteja"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "employeenew_ds",
								"type": "DatasetReference"
							},
							"name": "employee"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "empdeptoutput_ds",
								"type": "DatasetReference"
							},
							"name": "sink"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey"
						},
						{
							"name": "select"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id as string,",
						"          name as string,",
						"          gender as string,",
						"          country as string,",
						"          department as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> employee",
						"employee keyGenerate(output(primarykey as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey",
						"surrogateKey select(mapColumn(",
						"          primarykey,",
						"          id,",
						"          gender,",
						"          country,",
						"          department,",
						"          primarykey",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select",
						"select sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['surrogateoutput_62.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/totalempbydept_copy1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "saiteja"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "employee1csv_ds",
								"type": "DatasetReference"
							},
							"name": "employee1src"
						},
						{
							"dataset": {
								"referenceName": "deparment_ds",
								"type": "DatasetReference"
							},
							"name": "department"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "empdeptoutput_ds",
								"type": "DatasetReference"
							},
							"name": "totalempbydept1"
						}
					],
					"transformations": [
						{
							"name": "aggregate1"
						},
						{
							"name": "join1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          empid as string,",
						"          name as string,",
						"          country as string,",
						"          department as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> employee1src",
						"source(output(",
						"          depid as string,",
						"          depname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> department",
						"employee1src aggregate(groupBy(department),",
						"     totalemployees = count(empid)) ~> aggregate1",
						"aggregate1, department join(department == depid,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['totalempbydeptlatest.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          depname,",
						"          totalemployees",
						"     ),",
						"     partitionBy('hash', 1)) ~> totalempbydept1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/uniondataflow_55')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "saiteja"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "it_ds",
								"type": "DatasetReference"
							},
							"name": "it"
						},
						{
							"dataset": {
								"referenceName": "hr_ds",
								"type": "DatasetReference"
							},
							"name": "hr"
						},
						{
							"dataset": {
								"referenceName": "payroll_ds",
								"type": "DatasetReference"
							},
							"name": "payroll"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "empdeptoutput_ds",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "unionall"
						}
					],
					"scriptLines": [
						"source(output(",
						"          empid as string,",
						"          name as string,",
						"          country as string,",
						"          department as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> it",
						"source(output(",
						"          empid as string,",
						"          name as string,",
						"          country as string,",
						"          department as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> hr",
						"source(output(",
						"          empid as string,",
						"          name as string,",
						"          country as string,",
						"          department as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> payroll",
						"it, hr, payroll union(byName: true)~> unionall",
						"unionall sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['allemployees.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/windowtransformation_63')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "saiteja"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "EMPNEW",
								"type": "DatasetReference"
							},
							"name": "EMPNEW"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "empdeptoutput_ds",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "empdeptoutput_ds",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "windowavg"
						},
						{
							"name": "windowdenserank"
						}
					],
					"scriptLines": [
						"source(output(",
						"          empid as integer,",
						"          name as string,",
						"          gender as string,",
						"          country as string,",
						"          salary as integer,",
						"          department as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> EMPNEW",
						"EMPNEW window(over(department),",
						"     asc(salary, true),",
						"     { avg salary} = avg(salary)) ~> windowavg",
						"EMPNEW window(over(department),",
						"     desc(salary, true),",
						"     denserank = denseRank()) ~> windowdenserank",
						"windowavg sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['windowtransformation_avgsalary.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1",
						"windowdenserank sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['windowtransformation_denserank.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink2"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Exist_df_54')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "existsdataflow_54",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"employees": {},
									"dept": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 32,
								"computeType": "MemoryOptimized"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "saiteja_pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-23T05:10:49Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/aggregaredatafloepipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "aggregatetranformatio_50",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"employee1src": {},
									"totalempbydept": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 32,
								"computeType": "MemoryOptimized"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "saiteja_pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-23T05:10:49Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Dataflowactivity",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "empdeptdataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"employeedata": {},
									"departmentdata": {},
									"empdeptdata": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "saiteja_pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-23T05:10:49Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_activity51')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "totalempbydept_copy1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"employee1src": {},
									"department": {},
									"totalempbydept1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 32,
								"computeType": "MemoryOptimized"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "saiteja_pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-23T05:10:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/totalempbydept_copy1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_activity52_conditionalsplit')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "condiotinalsplit_dataflow52",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"allemployee": {},
									"payroll": {},
									"itemployees": {},
									"HR": {},
									"otheremployees": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 32,
								"computeType": "MemoryOptimized"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "saiteja_pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-23T05:10:49Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/executefilterdfpipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "output",
								"value": "succeeded"
							}
						],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Filterpayrollempdataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"empdata": {},
									"emppayrollsink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 32,
								"computeType": "MemoryOptimized"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "saiteja_pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-23T05:10:49Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/executepipeline_activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "parametrizedpipeline1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"sourcetable": {
									"value": "@pipeline().parameters.sourcetable",
									"type": "Expression"
								},
								"dbnamefrompipeline": {
									"value": "@pipeline().parameters.dbnamefrompipeline",
									"type": "Expression"
								},
								"targettable": {
									"value": "@pipeline().parameters.targettable",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sourcetable": {
						"type": "string"
					},
					"dbnamefrompipeline": {
						"type": "string"
					},
					"targettable": {
						"type": "string"
					}
				},
				"folder": {
					"name": "saiteja_pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-23T05:10:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lkpdataflow_56')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "lookup_dataflow_56",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"employee": {},
									"dept": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 32,
								"computeType": "MemoryOptimized"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "saiteja_pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-23T05:10:49Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/newbranch_dataflow_58')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "newbranch_dataflow_58",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"employeeagain": {},
									"department": {},
									"joindeptandemp": {},
									"totalempbydept": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 32,
								"computeType": "MemoryOptimized"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "saiteja_pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-23T05:10:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/newbranch_dataflow_58')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_66')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "parameterized_dataflow_66",
								"type": "DataFlowReference",
								"parameters": {
									"depName": {
										"value": "'@{pipeline().parameters.dep}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"employee": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 32,
								"computeType": "MemoryOptimized"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"dep": {
						"type": "string"
					}
				},
				"folder": {
					"name": "saiteja_pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-23T05:10:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/parameterized_dataflow_66')]"
			]
		}
	]
}